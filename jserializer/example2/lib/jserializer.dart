// GENERATED CODE. DO NOT MODIFY. Generated by JSerializerGenerator.

// ignore_for_file: unused_field,unnecessary_null_checks,prefer-match-file-name,depend_on_referenced_packages,lines_longer_than_80_chars,non_constant_identifier_names,constant_identifier_names,prefer_const_constructors,strict_raw_type,omit_local_variable_types,avoid_dynamic_calls,unnecessary_parenthesis,unnecessary_nullable_for_final_variable_declarations,annotate_overrides,type_annotate_public_apis,newline-before-return,prefer-trailing-comma,directives_ordering,long-method,use_named_constants,unnecessary_late

// **************************************************************************
// JSerializer: Serialization Done Right
// **************************************************************************

import 'package:jserializer/jserializer.dart' as js;
import 'package:example2/model/model.dart';

class ModelSerializer extends js.ModelSerializer<Model> {
  const ModelSerializer();

  static const jsonKeys = {
    'field1',
    'field2',
    'extras',
  };

  @override
  Model fromJson(json) {
    final String field1$Value = mapLookup(
      jsonName: 'field1',
      json: json,
    );
    final String field2$Value = mapLookup(
      jsonName: 'field2',
      json: json,
    );
    final extras$Json = json['extras'];
    final Map<String, dynamic> extras$Value = safeLookup<Map<String, dynamic>>(
      call: () => extras$Json == null
          ? const {}
          : Map<String, dynamic>.from((extras$Json as Map)),
      jsonKey: 'extras',
    );
    return Model(
      field1: field1$Value,
      field2: field2$Value,
      extras: extras$Value,
    );
  }

  @override
  Map<String, dynamic> toJson(Model model) => {
        'field1': model.field1,
        'field2': model.field2,
        'extras': model.extras,
      };
}

void initializeJSerializer() {
  js.JSerializer.register<Model>(
    (_) => const ModelSerializer(),
    (Function f) => f<Model>(),
  );
}
